name: Deploy to GitHub Pages

on:
  push:
    branches: [main, master]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PAGES_TOKEN: ${{ secrets.PAGES_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Install Node first (no pnpm cache yet)
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Install pnpm so it's available on PATH
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      # Optional: verify pnpm is available
      - name: Verify pnpm
        run: |
          pnpm -v
          which pnpm

      # Re-run setup-node to enable pnpm cache now that pnpm exists
      - name: Enable pnpm cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Configure Pages (enable if PAT provided)
        if: ${{ env.PAGES_TOKEN != '' }}
        uses: actions/configure-pages@v5
        with:
          token: ${{ env.PAGES_TOKEN }}
          enablement: true

      - name: Configure Pages (no enablement)
        if: ${{ env.PAGES_TOKEN == '' }}
        uses: actions/configure-pages@v5

      - name: Build
        run: pnpm exec vite build --base=./

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4